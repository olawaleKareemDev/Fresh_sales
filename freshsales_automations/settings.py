"""
Django settings for freshsales_automations project.

Generated by 'django-admin startproject' using Django 4.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
import os
# from kombu.utils.url import safequote
# import environ


# # # initialize environs
# env = environ.Env()
# environ.Env.read_env()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY =  "django-insecure-414$y3_1r=)!!&kb-xnjhr&!sr&vhux)w5sh@x1h#cit81*wbq"
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get('DEBUG')

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",

    "contacts",
    "rest_framework",
    "corsheaders",
    # "celery",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "freshsales_automations.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "freshsales_automations.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    
    # "default": {
    #     "ENGINE": "django.db.backends.sqlite3",
    #     "NAME": BASE_DIR / "db.sqlite3",
    # }

    # 'default': {

    #     'ENGINE': 'django.db.backends.mysql',
    #     'NAME': 'admin',
    #     'USER': 'root',
    #     'PASSWORD': 'root',
    #     'HOST': 'db',
    #     'PORT': '3306',
    # }


    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'postgres', 
        'USER': 'postgres', 
        'PASSWORD': 'postgres',
        'HOST': 'db2', 
        'PORT': '5432',
    }

}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",},
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "Africa/Lagos"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# celery details

CELERY_BROKER_URL = "amqps://xokdteks:tBNvj3bfAqoa894onG2RwfW_xN2pCFXR@moose.rmq.cloudamqp.com/xokdteks"
CELERY_ACCEPT_CONTENT = ["json"]
CELERY_TASK_SERIALIZER = "json"


from celery.schedules import crontab
from datetime import datetime

CELERY_BEAT_SCHEDULE = { # scheduler configuration 

    'Task_update_cooperate_data' : {  
        'task': 'contacts.tasks.task_service_update_cooperate_data', 
        'schedule': crontab(),  # happens every 9 am
    },

    'Task_load_cooperate_data_freshsales' : {  
        'task': 'contacts.tasks.task_freshsales_update_cooperate_data', 
        'schedule': crontab(),  # happens 10 am
    },

    'Task_update_individual_data' : {  
        'task': 'contacts.tasks.task_service_update_individual_data', 
        'schedule': crontab(),  # happens every midnight
    },

    'Task_load_individual_data_freshsales' : {  
        'task': 'contacts.tasks.task_freshsales_update_individual_data', 
        'schedule': crontab(),  # happens every 4am
    }

}





CORS_ALLOW_HEADERS = [
    "accept",
    "accept-encoding",
    "authorization",
    "content-type",
    "dnt",
    "origin",
    "user-agent",
    "x-csrftoken",
    "x-requested-with",
    "key",
    "size"

]


